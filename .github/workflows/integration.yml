name: "Project Integration Tests"

on:
  push:
    branches:
      - '**'
    tags-ignore:
      - '**'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  export-state-example-project:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        branch: [simulation_engine]  # Adjust branches/tags as needed

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: "corretto"
          java-version: "19"

      - name: SetUp ois-core
        run: |
          git clone https://github.com/attiasas/ois-core.git --branch ${{ matrix.branch }}
          cd ois-core
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            ./gradlew.bat publishToMavenLocal
          else
            chmod +x gradlew
            ./gradlew publishToMavenLocal
          fi
          cd ..  # Return to the main project working directory
        shell: bash

      - name: Publish Plugin to MavenLocal
        run: |
          if [[ ${{ matrix.os }} == "windows-latest" ]]; then
            ./gradlew.bat publishToMavenLocal
          else
            chmod +x gradlew
            ./gradlew publishToMavenLocal
          fi
        shell: bash

      - name: Run Export Task
        run: |
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            ./gradlew.bat -p src\\test\\resources\\projects\\state-example export --info
          else
            ./gradlew -p src/test/resources/projects/state-example export --info
          fi
        shell: bash

      - name: Check Files in Distribution Directory
        run: |
          dir="src/test/resources/projects/state-example/build/ois/distribution/html"
          # Resolve the absolute path of the directory to avoid any relative path issues
          dir_path=$(realpath "$dir" 2>/dev/null || echo "$dir")

          # Check if the directory exists
          if [ -d "$dir_path" ]; then
            # Check if there are any files in the directory
            if find "$dir_path" -type f -print -quit | grep -q .; then
              # Check the OS and print directory contents accordingly
              if [[ "$OSTYPE" == "msys" || "$OSTYPE" == "win32" ]]; then
                # Windows environment
                echo "Listing files in $dir_path (Windows):"
                dir "$dir_path"
              else
                # Linux or macOS
                echo "Listing files in $dir_path (Unix-like):"
                ls -la "$dir_path"
              fi
            else
              echo "No files found in the directory."
            fi
          else
            echo "Directory does not exist: $dir_path"
          fi
          # Check if the directory is not empty
          if ls "$dir"/* 1> /dev/null 2>&1; then
            echo "2: Files exist in the directory."
          else
          echo "2: No files found in the directory."
          fi
          
          

#           if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
#            if (Test-Path -Path "src\\test\\resources\\projects\\state-example\\build\\distribution\\html" -and (Get-ChildItem -Path "src\\test\\resources\\projects\\state-example\\build\\distribution\\html" | Measure-Object).Count -gt 0) {
#              Write-Output "Files were successfully created in build\\distribution\\html."
#            } else {
#              Write-Output "No files found in build\\distribution\\html" ; exit 1
#            }
#          elif [ "${{ matrix.os }}" == "macos-latest" ]; then
#            if [ -d "src/test/resources/projects/state-example/build/distribution/html" ] && [ "$(ls -A src/test/resources/projects/state-example/build/distribution/html)" ]; then
#              echo "Files were successfully created in build/distribution/html."
#            else
#              echo "No files found in build/distribution/html" && exit 1
#            fi
#          else
#            if [ -d "src/test/resources/projects/state-example/build/distribution/html" ] && [ "$(ls -A src/test/resources/projects/state-example/build/distribution/html)" ]; then
#              echo "Files were successfully created in build/distribution/html."
#            else
#              echo "No files found in build/distribution/html" && exit 1
#            fi
#          fi
        shell: bash
